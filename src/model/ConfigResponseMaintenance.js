/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 7.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Maintenance from './Maintenance';

/**
 * The ConfigResponseMaintenance model module.
 * @module model/ConfigResponseMaintenance
 * @version 0.4.0
 */
class ConfigResponseMaintenance {
    /**
     * Constructs a new <code>ConfigResponseMaintenance</code>.
     * Denotes whether the server is undergoing maintenance
     * @alias module:model/ConfigResponseMaintenance
     * @param {(module:model/Boolean|module:model/Maintenance)} instance The actual instance to initialize ConfigResponseMaintenance.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            // validate boolean
            if (!(typeof instance === 'boolean')) {
                throw new Error("Invalid value. Must be boolean. Input: " + JSON.stringify(instance));
            }
            this.actualInstance = instance;
            match++;
        } catch(err) {
            // json data failed to deserialize into Boolean
            errorMessages.push("Failed to construct Boolean: " + err)
        }

        try {
            if (typeof instance === "Maintenance") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Maintenance.validateJSON(instance); // throw an exception if no match
                // create Maintenance from JS object
                this.actualInstance = Maintenance.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Maintenance
            errorMessages.push("Failed to construct Maintenance: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `ConfigResponseMaintenance` with oneOf schemas Boolean, Maintenance. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `ConfigResponseMaintenance` with oneOf schemas Boolean, Maintenance. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>ConfigResponseMaintenance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfigResponseMaintenance} obj Optional instance to populate.
     * @return {module:model/ConfigResponseMaintenance} The populated <code>ConfigResponseMaintenance</code> instance.
     */
    static constructFromObject(data, obj) {
        return new ConfigResponseMaintenance(data);
    }

    /**
     * Gets the actual instance, which can be <code>Boolean</code>, <code>Maintenance</code>.
     * @return {(module:model/Boolean|module:model/Maintenance)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>Boolean</code>, <code>Maintenance</code>.
     * @param {(module:model/Boolean|module:model/Maintenance)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = ConfigResponseMaintenance.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of ConfigResponseMaintenance from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/ConfigResponseMaintenance} An instance of ConfigResponseMaintenance.
     */
    static fromJSON = function(json_string){
        return ConfigResponseMaintenance.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Maintenance message
 * @member {String} message
 */
ConfigResponseMaintenance.prototype['message'] = undefined;

/**
 * Maintenance header
 * @member {String} header
 */
ConfigResponseMaintenance.prototype['header'] = undefined;


ConfigResponseMaintenance.OneOf = ["Boolean", "Maintenance"];

export default ConfigResponseMaintenance;

