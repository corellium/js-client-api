/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 7.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MeteredSubscriptionUsage model module.
 * @module model/MeteredSubscriptionUsage
 * @version 0.4.0
 */
class MeteredSubscriptionUsage {
    /**
     * Constructs a new <code>MeteredSubscriptionUsage</code>.
     * 
     * @alias module:model/MeteredSubscriptionUsage
     */
    constructor() { 
        
        MeteredSubscriptionUsage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MeteredSubscriptionUsage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MeteredSubscriptionUsage} obj Optional instance to populate.
     * @return {module:model/MeteredSubscriptionUsage} The populated <code>MeteredSubscriptionUsage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MeteredSubscriptionUsage();

            if (data.hasOwnProperty('burst_rate')) {
                obj['burst_rate'] = ApiClient.convertToType(data['burst_rate'], 'Number');
            }
            if (data.hasOwnProperty('allocated_hours')) {
                obj['allocated_hours'] = ApiClient.convertToType(data['allocated_hours'], 'Number');
            }
            if (data.hasOwnProperty('plan_billed_amount')) {
                obj['plan_billed_amount'] = ApiClient.convertToType(data['plan_billed_amount'], 'Number');
            }
            if (data.hasOwnProperty('plan_billed_units')) {
                obj['plan_billed_units'] = ApiClient.convertToType(data['plan_billed_units'], 'Number');
            }
            if (data.hasOwnProperty('burst_billed_amount')) {
                obj['burst_billed_amount'] = ApiClient.convertToType(data['burst_billed_amount'], 'Number');
            }
            if (data.hasOwnProperty('burst_billed_units')) {
                obj['burst_billed_units'] = ApiClient.convertToType(data['burst_billed_units'], 'Number');
            }
            if (data.hasOwnProperty('burst_outstanding_amount')) {
                obj['burst_outstanding_amount'] = ApiClient.convertToType(data['burst_outstanding_amount'], 'Number');
            }
            if (data.hasOwnProperty('burst_outstanding_units')) {
                obj['burst_outstanding_units'] = ApiClient.convertToType(data['burst_outstanding_units'], 'Number');
            }
            if (data.hasOwnProperty('total_usage_amount')) {
                obj['total_usage_amount'] = ApiClient.convertToType(data['total_usage_amount'], 'Number');
            }
            if (data.hasOwnProperty('total_used_units')) {
                obj['total_used_units'] = ApiClient.convertToType(data['total_used_units'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MeteredSubscriptionUsage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MeteredSubscriptionUsage</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Unit price
 * @member {Number} burst_rate
 */
MeteredSubscriptionUsage.prototype['burst_rate'] = undefined;

/**
 * Allocated hours
 * @member {Number} allocated_hours
 */
MeteredSubscriptionUsage.prototype['allocated_hours'] = undefined;

/**
 * Plan cost
 * @member {Number} plan_billed_amount
 */
MeteredSubscriptionUsage.prototype['plan_billed_amount'] = undefined;

/**
 * Units included in plan
 * @member {Number} plan_billed_units
 */
MeteredSubscriptionUsage.prototype['plan_billed_units'] = undefined;

/**
 * Amount billed
 * @member {Number} burst_billed_amount
 */
MeteredSubscriptionUsage.prototype['burst_billed_amount'] = undefined;

/**
 * Units billed
 * @member {Number} burst_billed_units
 */
MeteredSubscriptionUsage.prototype['burst_billed_units'] = undefined;

/**
 * Outstanding amount
 * @member {Number} burst_outstanding_amount
 */
MeteredSubscriptionUsage.prototype['burst_outstanding_amount'] = undefined;

/**
 * Outstanding units
 * @member {Number} burst_outstanding_units
 */
MeteredSubscriptionUsage.prototype['burst_outstanding_units'] = undefined;

/**
 * Total cost in cents for current period
 * @member {Number} total_usage_amount
 */
MeteredSubscriptionUsage.prototype['total_usage_amount'] = undefined;

/**
 * Total used units for current period
 * @member {Number} total_used_units
 */
MeteredSubscriptionUsage.prototype['total_used_units'] = undefined;






export default MeteredSubscriptionUsage;

