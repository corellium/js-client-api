/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 4.5.0-16775
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NetdumpFilter model module.
 * @module model/NetdumpFilter
 * @version 0.3.2
 */
class NetdumpFilter {
    /**
     * Constructs a new <code>NetdumpFilter</code>.
     * 
     * @alias module:model/NetdumpFilter
     */
    constructor() { 
        
        NetdumpFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetdumpFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetdumpFilter} obj Optional instance to populate.
     * @return {module:model/NetdumpFilter} The populated <code>NetdumpFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetdumpFilter();

            if (data.hasOwnProperty('portRanges')) {
                obj['portRanges'] = ApiClient.convertToType(data['portRanges'], ['String']);
            }
            if (data.hasOwnProperty('srcPorts')) {
                obj['srcPorts'] = ApiClient.convertToType(data['srcPorts'], ['String']);
            }
            if (data.hasOwnProperty('dstPorts')) {
                obj['dstPorts'] = ApiClient.convertToType(data['dstPorts'], ['String']);
            }
            if (data.hasOwnProperty('ports')) {
                obj['ports'] = ApiClient.convertToType(data['ports'], ['String']);
            }
            if (data.hasOwnProperty('protocols')) {
                obj['protocols'] = ApiClient.convertToType(data['protocols'], ['String']);
            }
            if (data.hasOwnProperty('processes')) {
                obj['processes'] = ApiClient.convertToType(data['processes'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetdumpFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetdumpFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['portRanges'])) {
            throw new Error("Expected the field `portRanges` to be an array in the JSON data but got " + data['portRanges']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['srcPorts'])) {
            throw new Error("Expected the field `srcPorts` to be an array in the JSON data but got " + data['srcPorts']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dstPorts'])) {
            throw new Error("Expected the field `dstPorts` to be an array in the JSON data but got " + data['dstPorts']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ports'])) {
            throw new Error("Expected the field `ports` to be an array in the JSON data but got " + data['ports']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['protocols'])) {
            throw new Error("Expected the field `protocols` to be an array in the JSON data but got " + data['protocols']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['processes'])) {
            throw new Error("Expected the field `processes` to be an array in the JSON data but got " + data['processes']);
        }

        return true;
    }


}



/**
 * 
 * @member {Array.<String>} portRanges
 */
NetdumpFilter.prototype['portRanges'] = undefined;

/**
 * 
 * @member {Array.<String>} srcPorts
 */
NetdumpFilter.prototype['srcPorts'] = undefined;

/**
 * 
 * @member {Array.<String>} dstPorts
 */
NetdumpFilter.prototype['dstPorts'] = undefined;

/**
 * 
 * @member {Array.<String>} ports
 */
NetdumpFilter.prototype['ports'] = undefined;

/**
 * 
 * @member {Array.<String>} protocols
 */
NetdumpFilter.prototype['protocols'] = undefined;

/**
 * 
 * @member {Array.<String>} processes
 */
NetdumpFilter.prototype['processes'] = undefined;






export default NetdumpFilter;

