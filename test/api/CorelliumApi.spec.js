/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 7.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CorelliumClient);
  }
}(this, function(expect, CorelliumClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CorelliumClient.CorelliumApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CorelliumApi', function() {
    describe('createAssessment', function() {
      it('should call createAssessment successfully', function(done) {
        //uncomment below and update the code to test createAssessment
        //instance.createAssessment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAssessment', function() {
      it('should call deleteAssessment successfully', function(done) {
        //uncomment below and update the code to test deleteAssessment
        //instance.deleteAssessment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadReport', function() {
      it('should call downloadReport successfully', function(done) {
        //uncomment below and update the code to test downloadReport
        //instance.downloadReport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAssessmentById', function() {
      it('should call getAssessmentById successfully', function(done) {
        //uncomment below and update the code to test getAssessmentById
        //instance.getAssessmentById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAssessmentsByInstanceId', function() {
      it('should call getAssessmentsByInstanceId successfully', function(done) {
        //uncomment below and update the code to test getAssessmentsByInstanceId
        //instance.getAssessmentsByInstanceId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runTests', function() {
      it('should call runTests successfully', function(done) {
        //uncomment below and update the code to test runTests
        //instance.runTests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startMonitoring', function() {
      it('should call startMonitoring successfully', function(done) {
        //uncomment below and update the code to test startMonitoring
        //instance.startMonitoring(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopMonitoring', function() {
      it('should call stopMonitoring successfully', function(done) {
        //uncomment below and update the code to test stopMonitoring
        //instance.stopMonitoring(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AcceptSharedSnapshot', function() {
      it('should call v1AcceptSharedSnapshot successfully', function(done) {
        //uncomment below and update the code to test v1AcceptSharedSnapshot
        //instance.v1AcceptSharedSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ActivityExport', function() {
      it('should call v1ActivityExport successfully', function(done) {
        //uncomment below and update the code to test v1ActivityExport
        //instance.v1ActivityExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ActivityList', function() {
      it('should call v1ActivityList successfully', function(done) {
        //uncomment below and update the code to test v1ActivityList
        //instance.v1ActivityList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AddProjectKey', function() {
      it('should call v1AddProjectKey successfully', function(done) {
        //uncomment below and update the code to test v1AddProjectKey
        //instance.v1AddProjectKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AddTeamRoleToProject', function() {
      it('should call v1AddTeamRoleToProject successfully', function(done) {
        //uncomment below and update the code to test v1AddTeamRoleToProject
        //instance.v1AddTeamRoleToProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AddUserRoleToProject', function() {
      it('should call v1AddUserRoleToProject successfully', function(done) {
        //uncomment below and update the code to test v1AddUserRoleToProject
        //instance.v1AddUserRoleToProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AddUserToTeam', function() {
      it('should call v1AddUserToTeam successfully', function(done) {
        //uncomment below and update the code to test v1AddUserToTeam
        //instance.v1AddUserToTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentAppReady', function() {
      it('should call v1AgentAppReady successfully', function(done) {
        //uncomment below and update the code to test v1AgentAppReady
        //instance.v1AgentAppReady(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentDeleteFile', function() {
      it('should call v1AgentDeleteFile successfully', function(done) {
        //uncomment below and update the code to test v1AgentDeleteFile
        //instance.v1AgentDeleteFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentGetFile', function() {
      it('should call v1AgentGetFile successfully', function(done) {
        //uncomment below and update the code to test v1AgentGetFile
        //instance.v1AgentGetFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentGetTempFilename', function() {
      it('should call v1AgentGetTempFilename successfully', function(done) {
        //uncomment below and update the code to test v1AgentGetTempFilename
        //instance.v1AgentGetTempFilename(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentInstallApp', function() {
      it('should call v1AgentInstallApp successfully', function(done) {
        //uncomment below and update the code to test v1AgentInstallApp
        //instance.v1AgentInstallApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentInstallProfile', function() {
      it('should call v1AgentInstallProfile successfully', function(done) {
        //uncomment below and update the code to test v1AgentInstallProfile
        //instance.v1AgentInstallProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentKillApp', function() {
      it('should call v1AgentKillApp successfully', function(done) {
        //uncomment below and update the code to test v1AgentKillApp
        //instance.v1AgentKillApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentListAppIcons', function() {
      it('should call v1AgentListAppIcons successfully', function(done) {
        //uncomment below and update the code to test v1AgentListAppIcons
        //instance.v1AgentListAppIcons(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentListApps', function() {
      it('should call v1AgentListApps successfully', function(done) {
        //uncomment below and update the code to test v1AgentListApps
        //instance.v1AgentListApps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentListAppsStatus', function() {
      it('should call v1AgentListAppsStatus successfully', function(done) {
        //uncomment below and update the code to test v1AgentListAppsStatus
        //instance.v1AgentListAppsStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentListProfiles', function() {
      it('should call v1AgentListProfiles successfully', function(done) {
        //uncomment below and update the code to test v1AgentListProfiles
        //instance.v1AgentListProfiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentRunApp', function() {
      it('should call v1AgentRunApp successfully', function(done) {
        //uncomment below and update the code to test v1AgentRunApp
        //instance.v1AgentRunApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentSetFileAttributes', function() {
      it('should call v1AgentSetFileAttributes successfully', function(done) {
        //uncomment below and update the code to test v1AgentSetFileAttributes
        //instance.v1AgentSetFileAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentSystemGetAdbAuth', function() {
      it('should call v1AgentSystemGetAdbAuth successfully', function(done) {
        //uncomment below and update the code to test v1AgentSystemGetAdbAuth
        //instance.v1AgentSystemGetAdbAuth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentSystemGetNetwork', function() {
      it('should call v1AgentSystemGetNetwork successfully', function(done) {
        //uncomment below and update the code to test v1AgentSystemGetNetwork
        //instance.v1AgentSystemGetNetwork(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentSystemGetProp', function() {
      it('should call v1AgentSystemGetProp successfully', function(done) {
        //uncomment below and update the code to test v1AgentSystemGetProp
        //instance.v1AgentSystemGetProp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentSystemInstallOpenGApps', function() {
      it('should call v1AgentSystemInstallOpenGApps successfully', function(done) {
        //uncomment below and update the code to test v1AgentSystemInstallOpenGApps
        //instance.v1AgentSystemInstallOpenGApps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentSystemLock', function() {
      it('should call v1AgentSystemLock successfully', function(done) {
        //uncomment below and update the code to test v1AgentSystemLock
        //instance.v1AgentSystemLock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentSystemSetAdbAuth', function() {
      it('should call v1AgentSystemSetAdbAuth successfully', function(done) {
        //uncomment below and update the code to test v1AgentSystemSetAdbAuth
        //instance.v1AgentSystemSetAdbAuth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentSystemSetHostname', function() {
      it('should call v1AgentSystemSetHostname successfully', function(done) {
        //uncomment below and update the code to test v1AgentSystemSetHostname
        //instance.v1AgentSystemSetHostname(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentSystemShutdown', function() {
      it('should call v1AgentSystemShutdown successfully', function(done) {
        //uncomment below and update the code to test v1AgentSystemShutdown
        //instance.v1AgentSystemShutdown(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentSystemUnlock', function() {
      it('should call v1AgentSystemUnlock successfully', function(done) {
        //uncomment below and update the code to test v1AgentSystemUnlock
        //instance.v1AgentSystemUnlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentUninstallApp', function() {
      it('should call v1AgentUninstallApp successfully', function(done) {
        //uncomment below and update the code to test v1AgentUninstallApp
        //instance.v1AgentUninstallApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentUninstallProfile', function() {
      it('should call v1AgentUninstallProfile successfully', function(done) {
        //uncomment below and update the code to test v1AgentUninstallProfile
        //instance.v1AgentUninstallProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AgentUploadFile', function() {
      it('should call v1AgentUploadFile successfully', function(done) {
        //uncomment below and update the code to test v1AgentUploadFile
        //instance.v1AgentUploadFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AuthLogin', function() {
      it('should call v1AuthLogin successfully', function(done) {
        //uncomment below and update the code to test v1AuthLogin
        //instance.v1AuthLogin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1BtracePreauthorize', function() {
      it('should call v1BtracePreauthorize successfully', function(done) {
        //uncomment below and update the code to test v1BtracePreauthorize
        //instance.v1BtracePreauthorize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1CheckSubdomainExistence', function() {
      it('should call v1CheckSubdomainExistence successfully', function(done) {
        //uncomment below and update the code to test v1CheckSubdomainExistence
        //instance.v1CheckSubdomainExistence(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ClearCoreTrace', function() {
      it('should call v1ClearCoreTrace successfully', function(done) {
        //uncomment below and update the code to test v1ClearCoreTrace
        //instance.v1ClearCoreTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ClearHyperTrace', function() {
      it('should call v1ClearHyperTrace successfully', function(done) {
        //uncomment below and update the code to test v1ClearHyperTrace
        //instance.v1ClearHyperTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ClearHyperTraceHooks', function() {
      it('should call v1ClearHyperTraceHooks successfully', function(done) {
        //uncomment below and update the code to test v1ClearHyperTraceHooks
        //instance.v1ClearHyperTraceHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ClearInstancePanics', function() {
      it('should call v1ClearInstancePanics successfully', function(done) {
        //uncomment below and update the code to test v1ClearInstancePanics
        //instance.v1ClearInstancePanics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1CreateDomainAuthProvider', function() {
      it('should call v1CreateDomainAuthProvider successfully', function(done) {
        //uncomment below and update the code to test v1CreateDomainAuthProvider
        //instance.v1CreateDomainAuthProvider(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1CreateHook', function() {
      it('should call v1CreateHook successfully', function(done) {
        //uncomment below and update the code to test v1CreateHook
        //instance.v1CreateHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1CreateImage', function() {
      it('should call v1CreateImage successfully', function(done) {
        //uncomment below and update the code to test v1CreateImage
        //instance.v1CreateImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1CreateInstance', function() {
      it('should call v1CreateInstance successfully', function(done) {
        //uncomment below and update the code to test v1CreateInstance
        //instance.v1CreateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1CreateNetworkConnection', function() {
      it('should call v1CreateNetworkConnection successfully', function(done) {
        //uncomment below and update the code to test v1CreateNetworkConnection
        //instance.v1CreateNetworkConnection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1CreateProject', function() {
      it('should call v1CreateProject successfully', function(done) {
        //uncomment below and update the code to test v1CreateProject
        //instance.v1CreateProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1CreateSnapshot', function() {
      it('should call v1CreateSnapshot successfully', function(done) {
        //uncomment below and update the code to test v1CreateSnapshot
        //instance.v1CreateSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1CreateUser', function() {
      it('should call v1CreateUser successfully', function(done) {
        //uncomment below and update the code to test v1CreateUser
        //instance.v1CreateUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DeleteDomainAuthProvider', function() {
      it('should call v1DeleteDomainAuthProvider successfully', function(done) {
        //uncomment below and update the code to test v1DeleteDomainAuthProvider
        //instance.v1DeleteDomainAuthProvider(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DeleteHook', function() {
      it('should call v1DeleteHook successfully', function(done) {
        //uncomment below and update the code to test v1DeleteHook
        //instance.v1DeleteHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DeleteImage', function() {
      it('should call v1DeleteImage successfully', function(done) {
        //uncomment below and update the code to test v1DeleteImage
        //instance.v1DeleteImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DeleteInstance', function() {
      it('should call v1DeleteInstance successfully', function(done) {
        //uncomment below and update the code to test v1DeleteInstance
        //instance.v1DeleteInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DeleteInstanceSnapshot', function() {
      it('should call v1DeleteInstanceSnapshot successfully', function(done) {
        //uncomment below and update the code to test v1DeleteInstanceSnapshot
        //instance.v1DeleteInstanceSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DeleteNetworkConnection', function() {
      it('should call v1DeleteNetworkConnection successfully', function(done) {
        //uncomment below and update the code to test v1DeleteNetworkConnection
        //instance.v1DeleteNetworkConnection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DeleteProject', function() {
      it('should call v1DeleteProject successfully', function(done) {
        //uncomment below and update the code to test v1DeleteProject
        //instance.v1DeleteProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DeleteSnapshot', function() {
      it('should call v1DeleteSnapshot successfully', function(done) {
        //uncomment below and update the code to test v1DeleteSnapshot
        //instance.v1DeleteSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DeleteSnapshotPermissions', function() {
      it('should call v1DeleteSnapshotPermissions successfully', function(done) {
        //uncomment below and update the code to test v1DeleteSnapshotPermissions
        //instance.v1DeleteSnapshotPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DeleteUser', function() {
      it('should call v1DeleteUser successfully', function(done) {
        //uncomment below and update the code to test v1DeleteUser
        //instance.v1DeleteUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DisableExposePort', function() {
      it('should call v1DisableExposePort successfully', function(done) {
        //uncomment below and update the code to test v1DisableExposePort
        //instance.v1DisableExposePort(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1DownloadActivity', function() {
      it('should call v1DownloadActivity successfully', function(done) {
        //uncomment below and update the code to test v1DownloadActivity
        //instance.v1DownloadActivity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1EnableExposePort', function() {
      it('should call v1EnableExposePort successfully', function(done) {
        //uncomment below and update the code to test v1EnableExposePort
        //instance.v1EnableExposePort(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ExecuteHyperTraceHooks', function() {
      it('should call v1ExecuteHyperTraceHooks successfully', function(done) {
        //uncomment below and update the code to test v1ExecuteHyperTraceHooks
        //instance.v1ExecuteHyperTraceHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetActivityExportStatus', function() {
      it('should call v1GetActivityExportStatus successfully', function(done) {
        //uncomment below and update the code to test v1GetActivityExportStatus
        //instance.v1GetActivityExportStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetActivityExportTasks', function() {
      it('should call v1GetActivityExportTasks successfully', function(done) {
        //uncomment below and update the code to test v1GetActivityExportTasks
        //instance.v1GetActivityExportTasks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetConfig', function() {
      it('should call v1GetConfig successfully', function(done) {
        //uncomment below and update the code to test v1GetConfig
        //instance.v1GetConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetDomainAuthProviders', function() {
      it('should call v1GetDomainAuthProviders successfully', function(done) {
        //uncomment below and update the code to test v1GetDomainAuthProviders
        //instance.v1GetDomainAuthProviders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetHookById', function() {
      it('should call v1GetHookById successfully', function(done) {
        //uncomment below and update the code to test v1GetHookById
        //instance.v1GetHookById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetHooks', function() {
      it('should call v1GetHooks successfully', function(done) {
        //uncomment below and update the code to test v1GetHooks
        //instance.v1GetHooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetImage', function() {
      it('should call v1GetImage successfully', function(done) {
        //uncomment below and update the code to test v1GetImage
        //instance.v1GetImage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetImages', function() {
      it('should call v1GetImages successfully', function(done) {
        //uncomment below and update the code to test v1GetImages
        //instance.v1GetImages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetInstance', function() {
      it('should call v1GetInstance successfully', function(done) {
        //uncomment below and update the code to test v1GetInstance
        //instance.v1GetInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetInstanceConsole', function() {
      it('should call v1GetInstanceConsole successfully', function(done) {
        //uncomment below and update the code to test v1GetInstanceConsole
        //instance.v1GetInstanceConsole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetInstanceConsoleLog', function() {
      it('should call v1GetInstanceConsoleLog successfully', function(done) {
        //uncomment below and update the code to test v1GetInstanceConsoleLog
        //instance.v1GetInstanceConsoleLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetInstanceGpios', function() {
      it('should call v1GetInstanceGpios successfully', function(done) {
        //uncomment below and update the code to test v1GetInstanceGpios
        //instance.v1GetInstanceGpios(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetInstancePanics', function() {
      it('should call v1GetInstancePanics successfully', function(done) {
        //uncomment below and update the code to test v1GetInstancePanics
        //instance.v1GetInstancePanics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetInstancePeripherals', function() {
      it('should call v1GetInstancePeripherals successfully', function(done) {
        //uncomment below and update the code to test v1GetInstancePeripherals
        //instance.v1GetInstancePeripherals(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetInstanceScreenshot', function() {
      it('should call v1GetInstanceScreenshot successfully', function(done) {
        //uncomment below and update the code to test v1GetInstanceScreenshot
        //instance.v1GetInstanceScreenshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetInstanceSnapshot', function() {
      it('should call v1GetInstanceSnapshot successfully', function(done) {
        //uncomment below and update the code to test v1GetInstanceSnapshot
        //instance.v1GetInstanceSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetInstanceSnapshots', function() {
      it('should call v1GetInstanceSnapshots successfully', function(done) {
        //uncomment below and update the code to test v1GetInstanceSnapshots
        //instance.v1GetInstanceSnapshots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetInstances', function() {
      it('should call v1GetInstances successfully', function(done) {
        //uncomment below and update the code to test v1GetInstances
        //instance.v1GetInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetModelSoftware', function() {
      it('should call v1GetModelSoftware successfully', function(done) {
        //uncomment below and update the code to test v1GetModelSoftware
        //instance.v1GetModelSoftware(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetModels', function() {
      it('should call v1GetModels successfully', function(done) {
        //uncomment below and update the code to test v1GetModels
        //instance.v1GetModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetNetworkConnection', function() {
      it('should call v1GetNetworkConnection successfully', function(done) {
        //uncomment below and update the code to test v1GetNetworkConnection
        //instance.v1GetNetworkConnection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetProject', function() {
      it('should call v1GetProject successfully', function(done) {
        //uncomment below and update the code to test v1GetProject
        //instance.v1GetProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetProjectInstances', function() {
      it('should call v1GetProjectInstances successfully', function(done) {
        //uncomment below and update the code to test v1GetProjectInstances
        //instance.v1GetProjectInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetProjectKeys', function() {
      it('should call v1GetProjectKeys successfully', function(done) {
        //uncomment below and update the code to test v1GetProjectKeys
        //instance.v1GetProjectKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetProjectNetworkLog', function() {
      it('should call v1GetProjectNetworkLog successfully', function(done) {
        //uncomment below and update the code to test v1GetProjectNetworkLog
        //instance.v1GetProjectNetworkLog(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetProjectNetworkStatus', function() {
      it('should call v1GetProjectNetworkStatus successfully', function(done) {
        //uncomment below and update the code to test v1GetProjectNetworkStatus
        //instance.v1GetProjectNetworkStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetProjectVpnConfig', function() {
      it('should call v1GetProjectVpnConfig successfully', function(done) {
        //uncomment below and update the code to test v1GetProjectVpnConfig
        //instance.v1GetProjectVpnConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetProjects', function() {
      it('should call v1GetProjects successfully', function(done) {
        //uncomment below and update the code to test v1GetProjects
        //instance.v1GetProjects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetResetLinkInfo', function() {
      it('should call v1GetResetLinkInfo successfully', function(done) {
        //uncomment below and update the code to test v1GetResetLinkInfo
        //instance.v1GetResetLinkInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetServiceProviderMetadata', function() {
      it('should call v1GetServiceProviderMetadata successfully', function(done) {
        //uncomment below and update the code to test v1GetServiceProviderMetadata
        //instance.v1GetServiceProviderMetadata(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetSharedSnapshots', function() {
      it('should call v1GetSharedSnapshots successfully', function(done) {
        //uncomment below and update the code to test v1GetSharedSnapshots
        //instance.v1GetSharedSnapshots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1GetSnapshot', function() {
      it('should call v1GetSnapshot successfully', function(done) {
        //uncomment below and update the code to test v1GetSnapshot
        //instance.v1GetSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1InstancesInstanceIdMessagePost', function() {
      it('should call v1InstancesInstanceIdMessagePost successfully', function(done) {
        //uncomment below and update the code to test v1InstancesInstanceIdMessagePost
        //instance.v1InstancesInstanceIdMessagePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1InstancesInstanceIdNetdumpPcapGet', function() {
      it('should call v1InstancesInstanceIdNetdumpPcapGet successfully', function(done) {
        //uncomment below and update the code to test v1InstancesInstanceIdNetdumpPcapGet
        //instance.v1InstancesInstanceIdNetdumpPcapGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1InstancesInstanceIdNetworkMonitorPcapGet', function() {
      it('should call v1InstancesInstanceIdNetworkMonitorPcapGet successfully', function(done) {
        //uncomment below and update the code to test v1InstancesInstanceIdNetworkMonitorPcapGet
        //instance.v1InstancesInstanceIdNetworkMonitorPcapGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1Kcrange', function() {
      it('should call v1Kcrange successfully', function(done) {
        //uncomment below and update the code to test v1Kcrange
        //instance.v1Kcrange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ListNetworkConnections', function() {
      it('should call v1ListNetworkConnections successfully', function(done) {
        //uncomment below and update the code to test v1ListNetworkConnections
        //instance.v1ListNetworkConnections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ListNetworkInterfaces', function() {
      it('should call v1ListNetworkInterfaces successfully', function(done) {
        //uncomment below and update the code to test v1ListNetworkInterfaces
        //instance.v1ListNetworkInterfaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ListNetworkProviders', function() {
      it('should call v1ListNetworkProviders successfully', function(done) {
        //uncomment below and update the code to test v1ListNetworkProviders
        //instance.v1ListNetworkProviders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ListThreads', function() {
      it('should call v1ListThreads successfully', function(done) {
        //uncomment below and update the code to test v1ListThreads
        //instance.v1ListThreads(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1MediaPlay', function() {
      it('should call v1MediaPlay successfully', function(done) {
        //uncomment below and update the code to test v1MediaPlay
        //instance.v1MediaPlay(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1MediaStop', function() {
      it('should call v1MediaStop successfully', function(done) {
        //uncomment below and update the code to test v1MediaStop
        //instance.v1MediaStop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1PartialUpdateNetworkConnection', function() {
      it('should call v1PartialUpdateNetworkConnection successfully', function(done) {
        //uncomment below and update the code to test v1PartialUpdateNetworkConnection
        //instance.v1PartialUpdateNetworkConnection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1PatchInstance', function() {
      it('should call v1PatchInstance successfully', function(done) {
        //uncomment below and update the code to test v1PatchInstance
        //instance.v1PatchInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1PauseInstance', function() {
      it('should call v1PauseInstance successfully', function(done) {
        //uncomment below and update the code to test v1PauseInstance
        //instance.v1PauseInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1PostInstanceInput', function() {
      it('should call v1PostInstanceInput successfully', function(done) {
        //uncomment below and update the code to test v1PostInstanceInput
        //instance.v1PostInstanceInput(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1Ready', function() {
      it('should call v1Ready successfully', function(done) {
        //uncomment below and update the code to test v1Ready
        //instance.v1Ready(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1RebootInstance', function() {
      it('should call v1RebootInstance successfully', function(done) {
        //uncomment below and update the code to test v1RebootInstance
        //instance.v1RebootInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1RemoveProjectKey', function() {
      it('should call v1RemoveProjectKey successfully', function(done) {
        //uncomment below and update the code to test v1RemoveProjectKey
        //instance.v1RemoveProjectKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1RemoveTeamRoleFromProject', function() {
      it('should call v1RemoveTeamRoleFromProject successfully', function(done) {
        //uncomment below and update the code to test v1RemoveTeamRoleFromProject
        //instance.v1RemoveTeamRoleFromProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1RemoveUserFromTeam', function() {
      it('should call v1RemoveUserFromTeam successfully', function(done) {
        //uncomment below and update the code to test v1RemoveUserFromTeam
        //instance.v1RemoveUserFromTeam(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1RemoveUserRoleFromProject', function() {
      it('should call v1RemoveUserRoleFromProject successfully', function(done) {
        //uncomment below and update the code to test v1RemoveUserRoleFromProject
        //instance.v1RemoveUserRoleFromProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1RenameInstanceSnapshot', function() {
      it('should call v1RenameInstanceSnapshot successfully', function(done) {
        //uncomment below and update the code to test v1RenameInstanceSnapshot
        //instance.v1RenameInstanceSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ResetUserPassword', function() {
      it('should call v1ResetUserPassword successfully', function(done) {
        //uncomment below and update the code to test v1ResetUserPassword
        //instance.v1ResetUserPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1RestoreBackup', function() {
      it('should call v1RestoreBackup successfully', function(done) {
        //uncomment below and update the code to test v1RestoreBackup
        //instance.v1RestoreBackup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1RestoreInstanceSnapshot', function() {
      it('should call v1RestoreInstanceSnapshot successfully', function(done) {
        //uncomment below and update the code to test v1RestoreInstanceSnapshot
        //instance.v1RestoreInstanceSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1Roles', function() {
      it('should call v1Roles successfully', function(done) {
        //uncomment below and update the code to test v1Roles
        //instance.v1Roles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1RotateInstance', function() {
      it('should call v1RotateInstance successfully', function(done) {
        //uncomment below and update the code to test v1RotateInstance
        //instance.v1RotateInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1SendUserResetLink', function() {
      it('should call v1SendUserResetLink successfully', function(done) {
        //uncomment below and update the code to test v1SendUserResetLink
        //instance.v1SendUserResetLink(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1SetInstanceGpios', function() {
      it('should call v1SetInstanceGpios successfully', function(done) {
        //uncomment below and update the code to test v1SetInstanceGpios
        //instance.v1SetInstanceGpios(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1SetInstancePeripherals', function() {
      it('should call v1SetInstancePeripherals successfully', function(done) {
        //uncomment below and update the code to test v1SetInstancePeripherals
        //instance.v1SetInstancePeripherals(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1SetInstanceState', function() {
      it('should call v1SetInstanceState successfully', function(done) {
        //uncomment below and update the code to test v1SetInstanceState
        //instance.v1SetInstanceState(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1SetSnapshotPermissions', function() {
      it('should call v1SetSnapshotPermissions successfully', function(done) {
        //uncomment below and update the code to test v1SetSnapshotPermissions
        //instance.v1SetSnapshotPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1ShareSnapshot', function() {
      it('should call v1ShareSnapshot successfully', function(done) {
        //uncomment below and update the code to test v1ShareSnapshot
        //instance.v1ShareSnapshot(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1SnapshotRename', function() {
      it('should call v1SnapshotRename successfully', function(done) {
        //uncomment below and update the code to test v1SnapshotRename
        //instance.v1SnapshotRename(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1StartCoreTrace', function() {
      it('should call v1StartCoreTrace successfully', function(done) {
        //uncomment below and update the code to test v1StartCoreTrace
        //instance.v1StartCoreTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1StartHyperTrace', function() {
      it('should call v1StartHyperTrace successfully', function(done) {
        //uncomment below and update the code to test v1StartHyperTrace
        //instance.v1StartHyperTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1StartInstance', function() {
      it('should call v1StartInstance successfully', function(done) {
        //uncomment below and update the code to test v1StartInstance
        //instance.v1StartInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1StartNetdump', function() {
      it('should call v1StartNetdump successfully', function(done) {
        //uncomment below and update the code to test v1StartNetdump
        //instance.v1StartNetdump(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1StartNetworkMonitor', function() {
      it('should call v1StartNetworkMonitor successfully', function(done) {
        //uncomment below and update the code to test v1StartNetworkMonitor
        //instance.v1StartNetworkMonitor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1StopCoreTrace', function() {
      it('should call v1StopCoreTrace successfully', function(done) {
        //uncomment below and update the code to test v1StopCoreTrace
        //instance.v1StopCoreTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1StopHyperTrace', function() {
      it('should call v1StopHyperTrace successfully', function(done) {
        //uncomment below and update the code to test v1StopHyperTrace
        //instance.v1StopHyperTrace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1StopInstance', function() {
      it('should call v1StopInstance successfully', function(done) {
        //uncomment below and update the code to test v1StopInstance
        //instance.v1StopInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1StopNetdump', function() {
      it('should call v1StopNetdump successfully', function(done) {
        //uncomment below and update the code to test v1StopNetdump
        //instance.v1StopNetdump(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1StopNetworkMonitor', function() {
      it('should call v1StopNetworkMonitor successfully', function(done) {
        //uncomment below and update the code to test v1StopNetworkMonitor
        //instance.v1StopNetworkMonitor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1TeamChange', function() {
      it('should call v1TeamChange successfully', function(done) {
        //uncomment below and update the code to test v1TeamChange
        //instance.v1TeamChange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1TeamCreate', function() {
      it('should call v1TeamCreate successfully', function(done) {
        //uncomment below and update the code to test v1TeamCreate
        //instance.v1TeamCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1TeamDelete', function() {
      it('should call v1TeamDelete successfully', function(done) {
        //uncomment below and update the code to test v1TeamDelete
        //instance.v1TeamDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1Teams', function() {
      it('should call v1Teams successfully', function(done) {
        //uncomment below and update the code to test v1Teams
        //instance.v1Teams(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1UnpauseInstance', function() {
      it('should call v1UnpauseInstance successfully', function(done) {
        //uncomment below and update the code to test v1UnpauseInstance
        //instance.v1UnpauseInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1UpdateDomainAuthProvider', function() {
      it('should call v1UpdateDomainAuthProvider successfully', function(done) {
        //uncomment below and update the code to test v1UpdateDomainAuthProvider
        //instance.v1UpdateDomainAuthProvider(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1UpdateHook', function() {
      it('should call v1UpdateHook successfully', function(done) {
        //uncomment below and update the code to test v1UpdateHook
        //instance.v1UpdateHook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1UpdateNetworkConnection', function() {
      it('should call v1UpdateNetworkConnection successfully', function(done) {
        //uncomment below and update the code to test v1UpdateNetworkConnection
        //instance.v1UpdateNetworkConnection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1UpdateProject', function() {
      it('should call v1UpdateProject successfully', function(done) {
        //uncomment below and update the code to test v1UpdateProject
        //instance.v1UpdateProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1UpdateProjectSettings', function() {
      it('should call v1UpdateProjectSettings successfully', function(done) {
        //uncomment below and update the code to test v1UpdateProjectSettings
        //instance.v1UpdateProjectSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1UpdateUser', function() {
      it('should call v1UpdateUser successfully', function(done) {
        //uncomment below and update the code to test v1UpdateUser
        //instance.v1UpdateUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1UpgradeInstance', function() {
      it('should call v1UpgradeInstance successfully', function(done) {
        //uncomment below and update the code to test v1UpgradeInstance
        //instance.v1UpgradeInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1UploadImageData', function() {
      it('should call v1UploadImageData successfully', function(done) {
        //uncomment below and update the code to test v1UploadImageData
        //instance.v1UploadImageData(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1UserAgreeTerms', function() {
      it('should call v1UserAgreeTerms successfully', function(done) {
        //uncomment below and update the code to test v1UserAgreeTerms
        //instance.v1UserAgreeTerms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1UsersChangePasswordPost', function() {
      it('should call v1UsersChangePasswordPost successfully', function(done) {
        //uncomment below and update the code to test v1UsersChangePasswordPost
        //instance.v1UsersChangePasswordPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1UsersLogin', function() {
      it('should call v1UsersLogin successfully', function(done) {
        //uncomment below and update the code to test v1UsersLogin
        //instance.v1UsersLogin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1WebPlayerAllowedDomains', function() {
      it('should call v1WebPlayerAllowedDomains successfully', function(done) {
        //uncomment below and update the code to test v1WebPlayerAllowedDomains
        //instance.v1WebPlayerAllowedDomains(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1WebPlayerCreateSession', function() {
      it('should call v1WebPlayerCreateSession successfully', function(done) {
        //uncomment below and update the code to test v1WebPlayerCreateSession
        //instance.v1WebPlayerCreateSession(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1WebPlayerDestroySession', function() {
      it('should call v1WebPlayerDestroySession successfully', function(done) {
        //uncomment below and update the code to test v1WebPlayerDestroySession
        //instance.v1WebPlayerDestroySession(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1WebPlayerListSessions', function() {
      it('should call v1WebPlayerListSessions successfully', function(done) {
        //uncomment below and update the code to test v1WebPlayerListSessions
        //instance.v1WebPlayerListSessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1WebPlayerSessionInfo', function() {
      it('should call v1WebPlayerSessionInfo successfully', function(done) {
        //uncomment below and update the code to test v1WebPlayerSessionInfo
        //instance.v1WebPlayerSessionInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v2GetInstanceQuickConnectCommand', function() {
      it('should call v2GetInstanceQuickConnectCommand successfully', function(done) {
        //uncomment below and update the code to test v2GetInstanceQuickConnectCommand
        //instance.v2GetInstanceQuickConnectCommand(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v2GetInstanceState', function() {
      it('should call v2GetInstanceState successfully', function(done) {
        //uncomment below and update the code to test v2GetInstanceState
        //instance.v2GetInstanceState(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
