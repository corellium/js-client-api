/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 4.5.0-16775
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FileChanges model module.
 * @module model/FileChanges
 * @version 0.3.2
 */
class FileChanges {
    /**
     * Constructs a new <code>FileChanges</code>.
     * 
     * @alias module:model/FileChanges
     */
    constructor() { 
        
        FileChanges.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileChanges</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileChanges} obj Optional instance to populate.
     * @return {module:model/FileChanges} The populated <code>FileChanges</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileChanges();

            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'Number');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'Number');
            }
            if (data.hasOwnProperty('gid')) {
                obj['gid'] = ApiClient.convertToType(data['gid'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileChanges</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileChanges</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }

        return true;
    }


}



/**
 * Optional New path
 * @member {String} path
 */
FileChanges.prototype['path'] = undefined;

/**
 * Optional New Mode
 * @member {Number} mode
 */
FileChanges.prototype['mode'] = undefined;

/**
 * Optional New Owner UID
 * @member {Number} uid
 */
FileChanges.prototype['uid'] = undefined;

/**
 * Optional New Group GID
 * @member {Number} gid
 */
FileChanges.prototype['gid'] = undefined;






export default FileChanges;

