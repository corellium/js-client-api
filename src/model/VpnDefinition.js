/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 5.2.0-17368
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VpnDefinition model module.
 * @module model/VpnDefinition
 * @version 0.3.3
 */
class VpnDefinition {
    /**
     * Constructs a new <code>VpnDefinition</code>.
     * 
     * @alias module:model/VpnDefinition
     */
    constructor() { 
        
        VpnDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VpnDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VpnDefinition} obj Optional instance to populate.
     * @return {module:model/VpnDefinition} The populated <code>VpnDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VpnDefinition();

            if (data.hasOwnProperty('proxy')) {
                obj['proxy'] = ApiClient.convertToType(data['proxy'], [Object]);
            }
            if (data.hasOwnProperty('listeners')) {
                obj['listeners'] = ApiClient.convertToType(data['listeners'], [Object]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VpnDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VpnDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['proxy'])) {
            throw new Error("Expected the field `proxy` to be an array in the JSON data but got " + data['proxy']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['listeners'])) {
            throw new Error("Expected the field `listeners` to be an array in the JSON data but got " + data['listeners']);
        }

        return true;
    }


}



/**
 * 
 * @member {Array.<Object>} proxy
 */
VpnDefinition.prototype['proxy'] = undefined;

/**
 * 
 * @member {Array.<Object>} listeners
 */
VpnDefinition.prototype['listeners'] = undefined;






export default VpnDefinition;

