/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 7.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PasswordResetBody model module.
 * @module model/PasswordResetBody
 * @version 0.4.1
 */
class PasswordResetBody {
    /**
     * Constructs a new <code>PasswordResetBody</code>.
     * 
     * @alias module:model/PasswordResetBody
     * @param token {String} Password reset token
     * @param totpToken {String} Password reset totpToken
     * @param newPassword {String} new password
     */
    constructor(token, totpToken, newPassword) { 
        
        PasswordResetBody.initialize(this, token, totpToken, newPassword);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, token, totpToken, newPassword) { 
        obj['token'] = token;
        obj['totpToken'] = totpToken;
        obj['new-password'] = newPassword;
    }

    /**
     * Constructs a <code>PasswordResetBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PasswordResetBody} obj Optional instance to populate.
     * @return {module:model/PasswordResetBody} The populated <code>PasswordResetBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PasswordResetBody();

            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('totpToken')) {
                obj['totpToken'] = ApiClient.convertToType(data['totpToken'], 'String');
            }
            if (data.hasOwnProperty('new-password')) {
                obj['new-password'] = ApiClient.convertToType(data['new-password'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PasswordResetBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PasswordResetBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PasswordResetBody.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['totpToken'] && !(typeof data['totpToken'] === 'string' || data['totpToken'] instanceof String)) {
            throw new Error("Expected the field `totpToken` to be a primitive type in the JSON string but got " + data['totpToken']);
        }
        // ensure the json data is a string
        if (data['new-password'] && !(typeof data['new-password'] === 'string' || data['new-password'] instanceof String)) {
            throw new Error("Expected the field `new-password` to be a primitive type in the JSON string but got " + data['new-password']);
        }

        return true;
    }


}

PasswordResetBody.RequiredProperties = ["token", "totpToken", "new-password"];

/**
 * Password reset token
 * @member {String} token
 */
PasswordResetBody.prototype['token'] = undefined;

/**
 * Password reset totpToken
 * @member {String} totpToken
 */
PasswordResetBody.prototype['totpToken'] = undefined;

/**
 * new password
 * @member {String} new-password
 */
PasswordResetBody.prototype['new-password'] = undefined;






export default PasswordResetBody;

