/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 7.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateNetworkConnectionOptions model module.
 * @module model/CreateNetworkConnectionOptions
 * @version 0.4.0
 */
class CreateNetworkConnectionOptions {
    /**
     * Constructs a new <code>CreateNetworkConnectionOptions</code>.
     * 
     * @alias module:model/CreateNetworkConnectionOptions
     * @param identifier {String} UUIDv4
     * @param name {String} User specified name for this network connection. e.g. My Network Connection
     * @param provider {String} One of the registered [network provider types](#get-/v1/network/providers)
     */
    constructor(identifier, name, provider) { 
        
        CreateNetworkConnectionOptions.initialize(this, identifier, name, provider);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, identifier, name, provider) { 
        obj['identifier'] = identifier;
        obj['name'] = name;
        obj['provider'] = provider;
    }

    /**
     * Constructs a <code>CreateNetworkConnectionOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNetworkConnectionOptions} obj Optional instance to populate.
     * @return {module:model/CreateNetworkConnectionOptions} The populated <code>CreateNetworkConnectionOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNetworkConnectionOptions();

            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = ApiClient.convertToType(data['config'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateNetworkConnectionOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateNetworkConnectionOptions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateNetworkConnectionOptions.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['identifier'] && !(typeof data['identifier'] === 'string' || data['identifier'] instanceof String)) {
            throw new Error("Expected the field `identifier` to be a primitive type in the JSON string but got " + data['identifier']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }

        return true;
    }


}

CreateNetworkConnectionOptions.RequiredProperties = ["identifier", "name", "provider"];

/**
 * UUIDv4
 * @member {String} identifier
 */
CreateNetworkConnectionOptions.prototype['identifier'] = undefined;

/**
 * User specified name for this network connection. e.g. My Network Connection
 * @member {String} name
 */
CreateNetworkConnectionOptions.prototype['name'] = undefined;

/**
 * One of the registered [network provider types](#get-/v1/network/providers)
 * @member {String} provider
 */
CreateNetworkConnectionOptions.prototype['provider'] = undefined;

/**
 * An object containing network connection configuration data. Will vary based on network provider type. See examples.
 * @member {Object} config
 */
CreateNetworkConnectionOptions.prototype['config'] = undefined;






export default CreateNetworkConnectionOptions;

