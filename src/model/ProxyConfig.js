/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 4.5.0-16775
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProxyConfig model module.
 * @module model/ProxyConfig
 * @version 0.3.2
 */
class ProxyConfig {
    /**
     * Constructs a new <code>ProxyConfig</code>.
     * Represents a Proxy configuration object.
     * @alias module:model/ProxyConfig
     */
    constructor() { 
        
        ProxyConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProxyConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProxyConfig} obj Optional instance to populate.
     * @return {module:model/ProxyConfig} The populated <code>ProxyConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProxyConfig();

            if (data.hasOwnProperty('devicePort')) {
                obj['devicePort'] = ApiClient.convertToType(data['devicePort'], 'Number');
            }
            if (data.hasOwnProperty('firstAvailable')) {
                obj['firstAvailable'] = ApiClient.convertToType(data['firstAvailable'], 'Boolean');
            }
            if (data.hasOwnProperty('expose')) {
                obj['expose'] = ApiClient.convertToType(data['expose'], 'Boolean');
            }
            if (data.hasOwnProperty('routerPort')) {
                obj['routerPort'] = ApiClient.convertToType(data['routerPort'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProxyConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProxyConfig</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The device port to use for proxying.
 * @member {Number} devicePort
 */
ProxyConfig.prototype['devicePort'] = undefined;

/**
 * If `true`, the first available port will be used if `devicePort` is not available.
 * @member {Boolean} firstAvailable
 */
ProxyConfig.prototype['firstAvailable'] = undefined;

/**
 * If `true`, the proxy will be exposed to the external interface.
 * @member {Boolean} expose
 */
ProxyConfig.prototype['expose'] = undefined;

/**
 * The router port to use for proxying.
 * @member {Number} routerPort
 */
ProxyConfig.prototype['routerPort'] = undefined;






export default ProxyConfig;

