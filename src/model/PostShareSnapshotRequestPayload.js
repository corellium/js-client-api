/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 7.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostShareSnapshotRequestPayload model module.
 * @module model/PostShareSnapshotRequestPayload
 * @version 0.4.1
 */
class PostShareSnapshotRequestPayload {
    /**
     * Constructs a new <code>PostShareSnapshotRequestPayload</code>.
     * 
     * @alias module:model/PostShareSnapshotRequestPayload
     * @param sharingType {module:model/PostShareSnapshotRequestPayload.SharingTypeEnum} 
     */
    constructor(sharingType) { 
        
        PostShareSnapshotRequestPayload.initialize(this, sharingType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sharingType) { 
        obj['sharingType'] = sharingType;
    }

    /**
     * Constructs a <code>PostShareSnapshotRequestPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostShareSnapshotRequestPayload} obj Optional instance to populate.
     * @return {module:model/PostShareSnapshotRequestPayload} The populated <code>PostShareSnapshotRequestPayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostShareSnapshotRequestPayload();

            if (data.hasOwnProperty('sharingType')) {
                obj['sharingType'] = ApiClient.convertToType(data['sharingType'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostShareSnapshotRequestPayload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostShareSnapshotRequestPayload</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostShareSnapshotRequestPayload.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sharingType'] && !(typeof data['sharingType'] === 'string' || data['sharingType'] instanceof String)) {
            throw new Error("Expected the field `sharingType` to be a primitive type in the JSON string but got " + data['sharingType']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }

        return true;
    }


}

PostShareSnapshotRequestPayload.RequiredProperties = ["sharingType"];

/**
 * 
 * @member {module:model/PostShareSnapshotRequestPayload.SharingTypeEnum} sharingType
 */
PostShareSnapshotRequestPayload.prototype['sharingType'] = undefined;

/**
 * Password for passwordPublicLink.
 * @member {String} password
 */
PostShareSnapshotRequestPayload.prototype['password'] = undefined;





/**
 * Allowed values for the <code>sharingType</code> property.
 * @enum {String}
 * @readonly
 */
PostShareSnapshotRequestPayload['SharingTypeEnum'] = {

    /**
     * value: "publicLink"
     * @const
     */
    "publicLink": "publicLink",

    /**
     * value: "domainRestrictedLink"
     * @const
     */
    "domainRestrictedLink": "domainRestrictedLink",

    /**
     * value: "passwordPublicLink"
     * @const
     */
    "passwordPublicLink": "passwordPublicLink",

    /**
     * value: "emailInvite."
     * @const
     */
    "emailInvite.": "emailInvite."
};



export default PostShareSnapshotRequestPayload;

