/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 7.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssessmentIdStatus from './AssessmentIdStatus';
import CreateAssessmentDto from './CreateAssessmentDto';

/**
 * The Assessment model module.
 * @module model/Assessment
 * @version 0.4.1
 */
class Assessment {
    /**
     * Constructs a new <code>Assessment</code>.
     * @alias module:model/Assessment
     * @implements module:model/CreateAssessmentDto
     * @implements module:model/AssessmentIdStatus
     * @param instanceId {String} 
     * @param bundleId {String} 
     * @param status {String} 
     */
    constructor(instanceId, bundleId, status) { 
        CreateAssessmentDto.initialize(this, instanceId, bundleId);AssessmentIdStatus.initialize(this, status);
        Assessment.initialize(this, instanceId, bundleId, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, instanceId, bundleId, status) { 
        obj['instanceId'] = instanceId;
        obj['bundleId'] = bundleId;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>Assessment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Assessment} obj Optional instance to populate.
     * @return {module:model/Assessment} The populated <code>Assessment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Assessment();
            CreateAssessmentDto.constructFromObject(data, obj);
            AssessmentIdStatus.constructFromObject(data, obj);

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('reportId')) {
                obj['reportId'] = ApiClient.convertToType(data['reportId'], 'String');
            }
            if (data.hasOwnProperty('bundle')) {
                obj['bundle'] = ApiClient.convertToType(data['bundle'], Object);
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], Object);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('wordlist')) {
                obj['wordlist'] = ApiClient.convertToType(data['wordlist'], Object);
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'String');
            }
            if (data.hasOwnProperty('bundleId')) {
                obj['bundleId'] = ApiClient.convertToType(data['bundleId'], 'String');
            }
            if (data.hasOwnProperty('wordlistId')) {
                obj['wordlistId'] = ApiClient.convertToType(data['wordlistId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Assessment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Assessment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Assessment.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['createdBy'] && !(typeof data['createdBy'] === 'string' || data['createdBy'] instanceof String)) {
            throw new Error("Expected the field `createdBy` to be a primitive type in the JSON string but got " + data['createdBy']);
        }
        // ensure the json data is a string
        if (data['reportId'] && !(typeof data['reportId'] === 'string' || data['reportId'] instanceof String)) {
            throw new Error("Expected the field `reportId` to be a primitive type in the JSON string but got " + data['reportId']);
        }
        // validate the optional field `bundle`
        if (data['bundle']) { // data not null
          Object.validateJSON(data['bundle']);
        }
        // validate the optional field `results`
        if (data['results']) { // data not null
          Object.validateJSON(data['results']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          Object.validateJSON(data['metadata']);
        }
        // validate the optional field `wordlist`
        if (data['wordlist']) { // data not null
          Object.validateJSON(data['wordlist']);
        }
        // ensure the json data is a string
        if (data['instanceId'] && !(typeof data['instanceId'] === 'string' || data['instanceId'] instanceof String)) {
            throw new Error("Expected the field `instanceId` to be a primitive type in the JSON string but got " + data['instanceId']);
        }
        // ensure the json data is a string
        if (data['bundleId'] && !(typeof data['bundleId'] === 'string' || data['bundleId'] instanceof String)) {
            throw new Error("Expected the field `bundleId` to be a primitive type in the JSON string but got " + data['bundleId']);
        }
        // ensure the json data is a string
        if (data['wordlistId'] && !(typeof data['wordlistId'] === 'string' || data['wordlistId'] instanceof String)) {
            throw new Error("Expected the field `wordlistId` to be a primitive type in the JSON string but got " + data['wordlistId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

Assessment.RequiredProperties = ["instanceId", "bundleId", "status"];

/**
 * @member {Date} createdAt
 */
Assessment.prototype['createdAt'] = undefined;

/**
 * @member {Date} updatedAt
 */
Assessment.prototype['updatedAt'] = undefined;

/**
 * @member {String} createdBy
 */
Assessment.prototype['createdBy'] = undefined;

/**
 * @member {String} reportId
 */
Assessment.prototype['reportId'] = undefined;

/**
 * @member {Object} bundle
 */
Assessment.prototype['bundle'] = undefined;

/**
 * @member {Object} results
 */
Assessment.prototype['results'] = undefined;

/**
 * @member {Object} metadata
 */
Assessment.prototype['metadata'] = undefined;

/**
 * @member {Object} wordlist
 */
Assessment.prototype['wordlist'] = undefined;

/**
 * @member {String} instanceId
 */
Assessment.prototype['instanceId'] = undefined;

/**
 * @member {String} bundleId
 */
Assessment.prototype['bundleId'] = undefined;

/**
 * @member {String} wordlistId
 */
Assessment.prototype['wordlistId'] = undefined;

/**
 * @member {String} status
 */
Assessment.prototype['status'] = undefined;


// Implement CreateAssessmentDto interface:
/**
 * @member {String} instanceId
 */
CreateAssessmentDto.prototype['instanceId'] = undefined;
/**
 * @member {String} bundleId
 */
CreateAssessmentDto.prototype['bundleId'] = undefined;
/**
 * @member {String} wordlistId
 */
CreateAssessmentDto.prototype['wordlistId'] = undefined;
// Implement AssessmentIdStatus interface:
/**
 * @member {String} status
 */
AssessmentIdStatus.prototype['status'] = undefined;




export default Assessment;

