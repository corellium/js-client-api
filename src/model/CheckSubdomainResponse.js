/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 7.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CheckSubdomainResponse model module.
 * @module model/CheckSubdomainResponse
 * @version 0.4.1
 */
class CheckSubdomainResponse {
    /**
     * Constructs a new <code>CheckSubdomainResponse</code>.
     * 
     * @alias module:model/CheckSubdomainResponse
     * @param available {Boolean} Indicates whether the subdomain is available or not
     */
    constructor(available) { 
        
        CheckSubdomainResponse.initialize(this, available);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, available) { 
        obj['available'] = available;
    }

    /**
     * Constructs a <code>CheckSubdomainResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckSubdomainResponse} obj Optional instance to populate.
     * @return {module:model/CheckSubdomainResponse} The populated <code>CheckSubdomainResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckSubdomainResponse();

            if (data.hasOwnProperty('available')) {
                obj['available'] = ApiClient.convertToType(data['available'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckSubdomainResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckSubdomainResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CheckSubdomainResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

CheckSubdomainResponse.RequiredProperties = ["available"];

/**
 * Indicates whether the subdomain is available or not
 * @member {Boolean} available
 */
CheckSubdomainResponse.prototype['available'] = undefined;






export default CheckSubdomainResponse;

