/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 7.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SnapshotMember model module.
 * @module model/SnapshotMember
 * @version 0.4.0
 */
class SnapshotMember {
    /**
     * Constructs a new <code>SnapshotMember</code>.
     * 
     * @alias module:model/SnapshotMember
     * @param email {String} The email of the member
     * @param inviteSentAt {Number} The date when the invite was sent
     * @param sharedOn {Number} UNIX Date of when the snapshot was first shared with member
     */
    constructor(email, inviteSentAt, sharedOn) { 
        
        SnapshotMember.initialize(this, email, inviteSentAt, sharedOn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email, inviteSentAt, sharedOn) { 
        obj['email'] = email;
        obj['inviteSentAt'] = inviteSentAt;
        obj['sharedOn'] = sharedOn;
    }

    /**
     * Constructs a <code>SnapshotMember</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SnapshotMember} obj Optional instance to populate.
     * @return {module:model/SnapshotMember} The populated <code>SnapshotMember</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SnapshotMember();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('inviteSentAt')) {
                obj['inviteSentAt'] = ApiClient.convertToType(data['inviteSentAt'], 'Number');
            }
            if (data.hasOwnProperty('sharedOn')) {
                obj['sharedOn'] = ApiClient.convertToType(data['sharedOn'], 'Number');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SnapshotMember</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SnapshotMember</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SnapshotMember.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }

        return true;
    }


}

SnapshotMember.RequiredProperties = ["email", "inviteSentAt", "sharedOn"];

/**
 * The email of the member
 * @member {String} email
 */
SnapshotMember.prototype['email'] = undefined;

/**
 * The date when the invite was sent
 * @member {Number} inviteSentAt
 */
SnapshotMember.prototype['inviteSentAt'] = undefined;

/**
 * UNIX Date of when the snapshot was first shared with member
 * @member {Number} sharedOn
 */
SnapshotMember.prototype['sharedOn'] = undefined;

/**
 * The member's user ID
 * @member {String} userId
 */
SnapshotMember.prototype['userId'] = undefined;

/**
 * The user's label or name
 * @member {String} label
 */
SnapshotMember.prototype['label'] = undefined;






export default SnapshotMember;

