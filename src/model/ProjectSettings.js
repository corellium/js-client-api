/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 7.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectSettings model module.
 * @module model/ProjectSettings
 * @version 0.4.1
 */
class ProjectSettings {
    /**
     * Constructs a new <code>ProjectSettings</code>.
     * 
     * @alias module:model/ProjectSettings
     * @param internetAccess {Boolean} 
     * @param dhcp {Boolean} 
     */
    constructor(internetAccess, dhcp) { 
        
        ProjectSettings.initialize(this, internetAccess, dhcp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, internetAccess, dhcp) { 
        obj['internet-access'] = internetAccess;
        obj['dhcp'] = dhcp;
    }

    /**
     * Constructs a <code>ProjectSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectSettings} obj Optional instance to populate.
     * @return {module:model/ProjectSettings} The populated <code>ProjectSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectSettings();

            if (data.hasOwnProperty('internet-access')) {
                obj['internet-access'] = ApiClient.convertToType(data['internet-access'], 'Boolean');
            }
            if (data.hasOwnProperty('connection')) {
                obj['connection'] = ApiClient.convertToType(data['connection'], 'String');
            }
            if (data.hasOwnProperty('dhcp')) {
                obj['dhcp'] = ApiClient.convertToType(data['dhcp'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProjectSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProjectSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProjectSettings.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['connection'] && !(typeof data['connection'] === 'string' || data['connection'] instanceof String)) {
            throw new Error("Expected the field `connection` to be a primitive type in the JSON string but got " + data['connection']);
        }

        return true;
    }


}

ProjectSettings.RequiredProperties = ["internet-access", "dhcp"];

/**
 * 
 * @member {Boolean} internet-access
 */
ProjectSettings.prototype['internet-access'] = undefined;

/**
 * UUIDv4 network connection identifier or null for no vpn connection
 * @member {String} connection
 */
ProjectSettings.prototype['connection'] = undefined;

/**
 * 
 * @member {Boolean} dhcp
 */
ProjectSettings.prototype['dhcp'] = undefined;






export default ProjectSettings;

