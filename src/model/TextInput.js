/**
 * Corellium API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 7.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TextInput model module.
 * @module model/TextInput
 * @version 0.4.0
 */
class TextInput {
    /**
     * Constructs a new <code>TextInput</code>.
     * 
     * @alias module:model/TextInput
     * @param required {String} text to type
     */
    constructor(required) { 
        
        TextInput.initialize(this, required);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, required) { 
        obj['required'] = required;
    }

    /**
     * Constructs a <code>TextInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TextInput} obj Optional instance to populate.
     * @return {module:model/TextInput} The populated <code>TextInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TextInput();

            if (data.hasOwnProperty('required')) {
                obj['required'] = ApiClient.convertToType(data['required'], 'String');
            }
            if (data.hasOwnProperty('keyDuration')) {
                obj['keyDuration'] = ApiClient.convertToType(data['keyDuration'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TextInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TextInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TextInput.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['required'] && !(typeof data['required'] === 'string' || data['required'] instanceof String)) {
            throw new Error("Expected the field `required` to be a primitive type in the JSON string but got " + data['required']);
        }

        return true;
    }


}

TextInput.RequiredProperties = ["required"];

/**
 * text to type
 * @member {String} required
 */
TextInput.prototype['required'] = undefined;

/**
 * How long to take to type each key.  150ms if not defined.
 * @member {Number} keyDuration
 */
TextInput.prototype['keyDuration'] = undefined;






export default TextInput;

